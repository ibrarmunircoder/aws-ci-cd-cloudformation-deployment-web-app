Parameters:
  S3ArtifactBucketName:
    Type: String
    Description: Name of the S3 bucket to store build artifact.
    Default: mailing-label-artifact

Resources:
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodeBuildCICDAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}/*
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codedeploy.amazonaws.com]

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodePipelineCICDAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}/*
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/Mailing-Label-App-Build-Project
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/Mailing-Label-App-Build-Project:*
              - Effect: Allow
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                Resource: "*"

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: Mailing-Label-App
      ComputePlatform: Server

  BenefitFormDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: CodeDeployApplication
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Key: Name
          Value: mailing-label-form
          Type: KEY_AND_VALUE
      DeploymentGroupName: BenefitFormDeploymentGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoRollbackConfiguration:
        Enable: true
        Events:
          - DEPLOYMENT_FAILURE

  AdminPanelDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: CodeDeployApplication
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Key: Name
          Value: mailing-label-admin-panel
          Type: KEY_AND_VALUE
      DeploymentGroupName: AdminPanelDeploymentGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoRollbackConfiguration:
        Enable: true
        Events:
          - DEPLOYMENT_FAILURE

  MailingBackendAppDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: CodeDeployApplication
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Key: Name
          Value: mailing-label-backend-app
          Type: KEY_AND_VALUE
      DeploymentGroupName: MailingBackendAppDeploymentGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoRollbackConfiguration:
        Enable: true
        Events:
          - DEPLOYMENT_FAILURE

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Name: Mailing-Label-App-Build-Project
      Description: Build the application code to the production ready version and run test
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: S3
        Location: !Ref S3ArtifactBucketName
        Name: MailingLabelAppBuild.zip
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
      Source:
        Type: GITHUB
        Location: https://github.com/ibrarmunircoder/aws-ci-cd-cloudformation-deployment-web-app.git
        Auth:
          Type: OAUTH # Need to manually connect your GitHub account to CodeBuild from console (only required once)
      SourceVersion: main
      Triggers:
        Webhook: true

  MailingLabelPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MailingLabelPipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3ArtifactBucketName
      Stages:
        - Name: Source Checkout
          Actions:
            - Name: Source Code
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: Github
              OutputArtifacts:
                - Name: ApplicationCodeOutput
              Configuration:
                Owner: ibrarmunircoder
                Repo: aws-ci-cd-cloudformation-deployment-web-app
                Branch: main
                PollForSourceChanges: false
                OAuthToken:
              RunOrder: 1
