Parameters:
  S3ArtifactBucketName:
    Type: String
    Description: Name of the S3 bucket to store build artifact.
    Default: mailing-label-artifact

Resources:
  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CloudFormationVPCAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:AcceptVpcPeeringConnection"
                  - "ec2:AcceptVpcEndpointConnections"
                  - "ec2:AllocateAddress"
                  - "ec2:AssignIpv6Addresses"
                  - "ec2:AssignPrivateIpAddresses"
                  - "ec2:AssociateAddress"
                  - "ec2:AssociateDhcpOptions"
                  - "ec2:AssociateRouteTable"
                  - "ec2:AssociateSubnetCidrBlock"
                  - "ec2:AssociateVpcCidrBlock"
                  - "ec2:AttachClassicLinkVpc"
                  - "ec2:AttachInternetGateway"
                  - "ec2:AttachNetworkInterface"
                  - "ec2:AttachVpnGateway"
                  - "ec2:AuthorizeSecurityGroupEgress"
                  - "ec2:AuthorizeSecurityGroupIngress"
                  - "ec2:CreateCustomerGateway"
                  - "ec2:CreateDefaultSubnet"
                  - "ec2:CreateDefaultVpc"
                  - "ec2:CreateDhcpOptions"
                  - "ec2:CreateEgressOnlyInternetGateway"
                  - "ec2:CreateFlowLogs"
                  - "ec2:CreateInternetGateway"
                  - "ec2:CreateNatGateway"
                  - "ec2:CreateNetworkAcl"
                  - "ec2:CreateNetworkAcl"
                  - "ec2:CreateNetworkAclEntry"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:CreateNetworkInterfacePermission"
                  - "ec2:CreateRoute"
                  - "ec2:CreateRouteTable"
                  - "ec2:CreateSecurityGroup"
                  - "ec2:CreateSubnet"
                  - "ec2:CreateTags"
                  - "ec2:CreateVpc"
                  - "ec2:CreateVpcEndpoint"
                  - "ec2:CreateVpcEndpointConnectionNotification"
                  - "ec2:CreateVpcEndpointServiceConfiguration"
                  - "ec2:CreateVpcPeeringConnection"
                  - "ec2:CreateVpnConnection"
                  - "ec2:CreateVpnConnectionRoute"
                  - "ec2:CreateVpnGateway"
                  - "ec2:DeleteCustomerGateway"
                  - "ec2:DeleteDhcpOptions"
                  - "ec2:DeleteEgressOnlyInternetGateway"
                  - "ec2:DeleteFlowLogs"
                  - "ec2:DeleteInternetGateway"
                  - "ec2:DeleteNatGateway"
                  - "ec2:DeleteNetworkAcl"
                  - "ec2:DeleteNetworkAclEntry"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DeleteNetworkInterfacePermission"
                  - "ec2:DeleteRoute"
                  - "ec2:DeleteRouteTable"
                  - "ec2:DeleteSecurityGroup"
                  - "ec2:DeleteSubnet"
                  - "ec2:DeleteTags"
                  - "ec2:DeleteVpc"
                  - "ec2:DeleteVpcEndpoints"
                  - "ec2:DeleteVpcEndpointConnectionNotifications"
                  - "ec2:DeleteVpcEndpointServiceConfigurations"
                  - "ec2:DeleteVpcPeeringConnection"
                  - "ec2:DeleteVpnConnection"
                  - "ec2:DeleteVpnConnectionRoute"
                  - "ec2:DeleteVpnGateway"
                  - "ec2:DescribeAccountAttributes"
                  - "ec2:DescribeAddresses"
                  - "ec2:DescribeAvailabilityZones"
                  - "ec2:DescribeClassicLinkInstances"
                  - "ec2:DescribeCustomerGateways"
                  - "ec2:DescribeDhcpOptions"
                  - "ec2:DescribeEgressOnlyInternetGateways"
                  - "ec2:DescribeFlowLogs"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeInternetGateways"
                  - "ec2:DescribeKeyPairs"
                  - "ec2:DescribeMovingAddresses"
                  - "ec2:DescribeNatGateways"
                  - "ec2:DescribeNetworkAcls"
                  - "ec2:DescribeNetworkInterfaceAttribute"
                  - "ec2:DescribeNetworkInterfacePermissions"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DescribePrefixLists"
                  - "ec2:DescribeRouteTables"
                  - "ec2:DescribeSecurityGroupReferences"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeStaleSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeTags"
                  - "ec2:DescribeVpcAttribute"
                  - "ec2:DescribeVpcClassicLink"
                  - "ec2:DescribeVpcClassicLinkDnsSupport"
                  - "ec2:DescribeVpcEndpointConnectionNotifications"
                  - "ec2:DescribeVpcEndpointConnections"
                  - "ec2:DescribeVpcEndpoints"
                  - "ec2:DescribeVpcEndpointServiceConfigurations"
                  - "ec2:DescribeVpcEndpointServicePermissions"
                  - "ec2:DescribeVpcEndpointServices"
                  - "ec2:DescribeVpcPeeringConnections"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeVpnConnections"
                  - "ec2:DescribeVpnGateways"
                  - "ec2:DetachClassicLinkVpc"
                  - "ec2:DetachInternetGateway"
                  - "ec2:DetachNetworkInterface"
                  - "ec2:DetachVpnGateway"
                  - "ec2:DisableVgwRoutePropagation"
                  - "ec2:DisableVpcClassicLink"
                  - "ec2:DisableVpcClassicLinkDnsSupport"
                  - "ec2:DisassociateAddress"
                  - "ec2:DisassociateRouteTable"
                  - "ec2:DisassociateSubnetCidrBlock"
                  - "ec2:DisassociateVpcCidrBlock"
                  - "ec2:EnableVgwRoutePropagation"
                  - "ec2:EnableVpcClassicLink"
                  - "ec2:EnableVpcClassicLinkDnsSupport"
                  - "ec2:ModifyNetworkInterfaceAttribute"
                  - "ec2:ModifySubnetAttribute"
                  - "ec2:ModifyVpcAttribute"
                  - "ec2:ModifyVpcEndpoint"
                  - "ec2:ModifyVpcEndpointConnectionNotification"
                  - "ec2:ModifyVpcEndpointServiceConfiguration"
                  - "ec2:ModifyVpcEndpointServicePermissions"
                  - "ec2:ModifyVpcPeeringConnectionOptions"
                  - "ec2:ModifyVpcTenancy"
                  - "ec2:MoveAddressToVpc"
                  - "ec2:RejectVpcEndpointConnections"
                  - "ec2:RejectVpcPeeringConnection"
                  - "ec2:ReleaseAddress"
                  - "ec2:ReplaceNetworkAclAssociation"
                  - "ec2:ReplaceNetworkAclEntry"
                  - "ec2:ReplaceRoute"
                  - "ec2:ReplaceRouteTableAssociation"
                  - "ec2:ResetNetworkInterfaceAttribute"
                  - "ec2:RestoreAddressToClassic"
                  - "ec2:RevokeSecurityGroupEgress"
                  - "ec2:RevokeSecurityGroupIngress"
                  - "ec2:UnassignIpv6Addresses"
                  - "ec2:UnassignPrivateIpAddresses"
                  - "ec2:UpdateSecurityGroupRuleDescriptionsEgress"
                  - "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                Resource: "*"
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodeBuildCICDAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}/*
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codedeploy.amazonaws.com]

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodePipelineCICDAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactBucketName}/*
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/Mailing-Label-App-Build-Project
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/Mailing-Label-App-Build-Project:*
              - Effect: Allow
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:CreateStack"
                  - "cloudformation:CreateUploadBucket"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:ValidateTemplate"
                  - "cloudformation:ExecuteChangeSet"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole-${AWS::StackName}
              - Effect: "Allow"
                Action: "codestar-connections:UseConnection"
                Resource: arn:aws:codestar-connections:us-east-1:212446767488:connection/528b9270-5d4a-4a40-a26d-e85faad67d70

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: Mailing-Label-App
      ComputePlatform: Server

  BenefitFormDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn:
      - CodeDeployApplication
      - CodeDeployRole
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Key: Name
          Value: mailing-label-form
          Type: KEY_AND_VALUE
      DeploymentGroupName: BenefitFormDeploymentGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoRollbackConfiguration:
        Enabled: "true"
        Events:
          - DEPLOYMENT_FAILURE

  AdminPanelDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn:
      - CodeDeployApplication
      - CodeDeployRole
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Key: Name
          Value: mailing-label-admin-panel
          Type: KEY_AND_VALUE
      DeploymentGroupName: AdminPanelDeploymentGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoRollbackConfiguration:
        Enabled: "true"
        Events:
          - DEPLOYMENT_FAILURE

  MailingBackendAppDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn:
      - CodeDeployApplication
      - CodeDeployRole
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Key: Name
          Value: mailing-label-backend-app
          Type: KEY_AND_VALUE
      DeploymentGroupName: MailingBackendAppDeploymentGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoRollbackConfiguration:
        Enabled: "true"
        Events:
          - DEPLOYMENT_FAILURE

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Name: Mailing-Label-App-Build-Project
      Description: Build the application code to the production ready version and run test
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: S3
        Location: !Ref S3ArtifactBucketName
        Name: MailingLabelAppBuild.zip
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
      Source:
        Type: GITHUB
        Location: https://github.com/ibrarmunircoder/aws-ci-cd-cloudformation-deployment-web-app.git
        Auth:
          Type: OAUTH # Need to manually connect your GitHub account to CodeBuild from console (only required once)
      SourceVersion: main
      Triggers:
        Webhook: true

  MailingLabelPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MailingLabelPipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3ArtifactBucketName
      Stages:
        - Name: SourceCheckout
          Actions:
            - Name: SourceCode
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: ApplicationCodeOutput
              Configuration:
                ConnectionArn: arn:aws:codestar-connections:us-east-1:212446767488:connection/528b9270-5d4a-4a40-a26d-e85faad67d70
                FullRepositoryId: ibrarmunircoder/aws-ci-cd-cloudformation-deployment-web-app
                BranchName: main
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: ApplicationCodeOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: MailingLabelArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: AppCfnChangeSet
          Actions:
            - Name: CreateAppCfnChangeSet
              InputArtifacts:
                - Name: MailingLabelArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: CreateAppCfnChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: MailingLabelAppChangeSet
                RoleArn: !GetAtt [CloudFormationRole, Arn]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: MailingLabelAppStack
                TemplatePath: MailingLabelArtifact::infra/app-stack.yaml
              RunOrder: 1
            - Name: ExecuteAppCfnChangeSet
              InputArtifacts:
                - Name: CreateAppCfnChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: MailingLabelAppChangeSet
                StackName: MailingLabelAppStack
              RunOrder: 2
        - Name: DeployBenefitApp
          Actions:
            - Name: DeployBenefitCode
              InputArtifacts:
                - Name: MailingLabelArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref BenefitFormDeploymentGroup
              RunOrder: 1
