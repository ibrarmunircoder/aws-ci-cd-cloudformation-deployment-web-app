Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.16.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub vpc-${AWS::StackName}
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub vpc-igw-${AWS::StackName}
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
  ElasticIPWebA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: InternetGateway

  ElasticIPWebB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: InternetGateway

  ElasticIPWebC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: InternetGateway

  NatGatewayWebA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPWebA.AllocationId
      SubnetId: !Ref SubnetWebA

  NatGatewayWebB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPWebB.AllocationId
      SubnetId: !Ref SubnetWebB

  NatGatewayWebC:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPWebC.AllocationId
      SubnetId: !Ref SubnetWebC

  RouteTableWeb:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: vpc-rt-web
      VpcId: !Ref Vpc
  WebRouteIPV4:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: RouteTableWeb
  WebRouteIPV6:
    Type: AWS::EC2::Route
    Properties:
      DestinationIpv6CidrBlock: ::/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: RouteTableWeb

  RouteTablePrivateA:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: vpc-rt-private-a
      VpcId: !Ref Vpc
  PrivateARoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayWebA
      RouteTableId:
        Ref: RouteTablePrivateA

  RouteTablePrivateB:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: vpc-rt-private-b
      VpcId: !Ref Vpc
  PrivateBRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayWebB
      RouteTableId:
        Ref: RouteTablePrivateB

  RouteTablePrivateC:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: vpc-rt-private-b
      VpcId: !Ref Vpc
  PrivateCRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayWebC
      RouteTableId:
        Ref: RouteTablePrivateC

  SubnetReservedA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.16.0.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-reserved-A

  PrivateRoutTableReservedAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      SubnetId: !Ref SubnetReservedA

  SubnetReservedB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1b
      CidrBlock: 10.16.64.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-reserved-B
  PrivateRoutTableReservedAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateB
      SubnetId: !Ref SubnetReservedB

  SubnetReservedC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1c
      CidrBlock: 10.16.128.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-reserved-C
  PrivateRoutTableReservedAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateC
      SubnetId: !Ref SubnetReservedC

  SubnetDbA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.16.16.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-db-A
  PrivateRoutTableDbAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      SubnetId: !Ref SubnetDbA

  SubnetDbB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1b
      CidrBlock: 10.16.80.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-db-B

  PrivateRoutTableDbAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateB
      SubnetId: !Ref SubnetDbB

  SubnetDbC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1c
      CidrBlock: 10.16.144.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-db-C

  PrivateRoutTableDbAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateC
      SubnetId: !Ref SubnetDbC

  SubnetAppA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.16.32.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-app-A

  PrivateRoutTableAppAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      SubnetId: !Ref SubnetAppA

  SubnetAppB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1b
      CidrBlock: 10.16.96.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-app-B
  PrivateRoutTableAppAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateB
      SubnetId: !Ref SubnetAppB

  SubnetAppC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1c
      CidrBlock: 10.16.160.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-app-C
  PrivateRoutTableAppAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateC
      SubnetId: !Ref SubnetAppC

  SubnetWebA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.16.48.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-web-A

  WebRoutTableAppAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableWeb
      SubnetId: !Ref SubnetWebA

  SubnetWebB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1b
      CidrBlock: 10.16.112.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-web-B

  WebRoutTableAppAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableWeb
      SubnetId: !Ref SubnetWebB

  SubnetWebC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone: us-east-1c
      CidrBlock: 10.16.176.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-web-C
  WebRoutTableAppAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableWeb
      SubnetId: !Ref SubnetWebC

Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref Vpc

  SubnetWebAId:
    Description: The id of the Web A subnet
    Value: !Ref SubnetWebA
  SubnetWebBId:
    Description: The id of the Web B subnet
    Value: !Ref SubnetWebB
  SubnetWebCId:
    Description: The id of the Web C subnet
    Value: !Ref SubnetWebC

  SubnetDbAId:
    Description: The id of the DB A subnet
    Value: !Ref SubnetDbA
  SubnetDbBId:
    Description: The id of the DB B subnet
    Value: !Ref SubnetDbB
  SubnetDbCId:
    Description: The id of the DB C subnet
    Value: !Ref SubnetDbC

  SubnetAppAId:
    Description: The id of the App A subnet
    Value: !Ref SubnetAppA
  SubnetAppBId:
    Description: The id of the App B subnet
    Value: !Ref SubnetAppB
  SubnetAppCId:
    Description: The id of the App C subnet
    Value: !Ref SubnetAppC
